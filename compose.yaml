version: "3.9"
services:
  postgres:
    image: postgres:14.5
    environment:
      - POSTGRES_DB=${ORDMDIO_DB_NAME}
      - POSTGRES_USER=${ORDMDIO_DB_USER}
      - POSTGRES_PASSWORD=${ORDMDIO_DB_PASSWORD}
    volumes:
      - ./:/data
    ports:
      - "5432:5432"
    networks:
      - blackwall
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - blackwall
  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - blackwall
  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic transfer_topic --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
#  transfer-service:
#    environment:
#    ports:
#      - "8080:8080"
#    restart: always
#    depends_on:
#      - "postgres"
#    networks:
#      - blackwall
  balance-service:
    build:
      dockerfile: ./transfer-service/Dockerfile
      context: .
    environment:
      - TRANSFERSERVICE_API_BIND_ADDR=${TRANSFERSERVICE_API_BIND_ADDR}
      - TRANSFERSERVICE_KAFKA_BROKERS=${TRANSFERSERVICE_KAFKA_BROKERS}
      - TRANSFERSERVICE_KAFKA_TOPIC=${TRANSFERSERVICE_KAFKA_TOPIC}
    restart: always
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    networks:
      - blackwall
networks:
  blackwall:
    driver: bridge
